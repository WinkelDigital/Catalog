<?php
/**
 * Product list template
 *
 * @var $block \Magento\Catalog\Block\Product\ListProduct
 */
?>
<?php
$_productCollection = $block->getLoadedProductCollection();
$_helper = $this->helper('Magento\Catalog\Helper\Output');
?>
<?php if (!$_productCollection->count()): ?>
    <div class="message info empty"><div><?= /* @escapeNotVerified */ __('We can\'t find products matching the selection.') ?></div></div>
<?php else: ?>
    <?= $block->getToolbarHtml() ?>
    <?= $block->getAdditionalHtml() ?>
    <?php
    if ($block->getMode() == 'grid') {
        $viewMode = 'grid';
        $imageDisplayArea = 'category_page_grid';
        $showDescription = false;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::SHORT_VIEW;
    } else {
        $viewMode = 'list';
        $imageDisplayArea = 'category_page_list';
        $showDescription = true;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::FULL_VIEW;
    }
    /**
     * Position for actions regarding image size changing in vde if needed
     */
    $pos = $block->getPositioned();
    ?>
    <div class="products wrapper  <?= /* @escapeNotVerified */ $viewMode ?> products-<?= /* @escapeNotVerified */ $viewMode ?>">
        <ol class="products product-item-filtered mx-0 list items product-items">
        </ol>
    </div>
    <div class="text-center mb-5" style="display:none" id="pager-wrapper">
      <p>Showing <span id="num-shown-prods"></span> of <span id="num-total-products"></span> Products</p>
      <div id="prod-load-status" style="width: 250px; margin:auto; height: 5px; background: #dddddd">
        <div id="prod-load-status-val" style="width: 0px; height: 5px; transition: all .3s ease-in-out; background: #000"></div>
      </div>
      <a href="#" style="display:none" class="btn btn-secondary main-button text-light my-5" id="product-load-trigger" data-text="<?= __('View More') ?>"><?= __('View More') ?></a>
    </div>
<?php endif; ?>




<script type="text/javascript">
  require(['jquery'], function($){
    let page = 0;
    const loadProduct = function(url, options = {},cleanFirst = false){

      const resultElWrapper = $('.product-item-filtered')
      if(cleanFirst){
        resultElWrapper.empty()
      }
      const loadTrigger = $('#product-load-trigger')
      loadTrigger.attr('disabled','disabled')
      loadTrigger.text('Loading....')
      resultElWrapper.addClass('loading')
      const data = Object.assign({
        '__a':1
      },options)
      return new Promise((resolve,reject)=>{
        $.ajax({
          url,
          type:'get',
          data
        }).then(result =>{
          $('.filter-current').remove()
          $('.filter-content').prepend(result.state)
          loadTrigger.removeAttr('disabled')
          loadTrigger.text(loadTrigger.data('text'))
          resultElWrapper.append(result.html)
          resultElWrapper.removeClass('loading')
          const totitem = result.total
          const page = result.page
          const perpage = result.limit
          const prodToShown = perpage * page

          if(prodToShown >= totitem){
            $('#product-load-trigger').hide()
          }else{
            $('#product-load-trigger').show()
          }


          $('#num-total-products').text(totitem)
          if((perpage * page) >= totitem){
            $('#load-more-prod').hide()
          }
          $('#num-shown-prods').text(prodToShown > totitem?totitem:prodToShown)
          const percentage = prodToShown/totitem * 100
          console.log(percentage);
          $('#prod-load-status-val').css('width', (percentage > 100 ? 100:percentage) +'%')

          resultElWrapper.find(".product-image-photo").each(function(){
            $(this).attr('src',$(this).data('src'))
          })
          $('#pager-wrapper').show()
          resolve(result)
        })
      })
    }

    var baseUrl = window.location.href
    var curFilter = parseParams(baseUrl)
    $(document).ready(function(){
       loadProduct(baseUrl).then(function(result){
         page = result.page
       })
    })
    $('#product-load-trigger').click(function(e){
       e.preventDefault()
       loadProduct(baseUrl,Object.assign(curFilter,{
         'p':page+1
       })).then(function(result){
         page = result.page
       })
    })
    $('.filter-options-content a').click(function(e){
       e.preventDefault()
       curFilter = Object.assign({},
         curFilter,
         parseParams($(this).attr('href')),
         {'p':1}
       );
       loadProduct($(this).attr('href'),curFilter, true).then(function(result){
         page = result.page
       })
    })
    $('.filter-content').on('click','.filter-current a', function(e){
      e.preventDefault()
      curFilter = Object.assign(parseParams($(this).attr('href')),{
        'p':1
      })
      loadProduct($(this).attr('href'),curFilter, true).then(function(result){
        page = result.page
      })
    })
    function parseParams(url){
      const params = url.split('?')
      if(params.length > 1){
        return JSON.parse('{"' + decodeURI(params[1].replace(/&/g, "\",\"").replace(/=/g,"\":\"")) + '"}')
      }
      return {}
    }
    function mergeData(src1,src2){
      return Object.assign({},
        parseParams(src1),
        parseParams(src2)
      )
    }
  })
</script>
